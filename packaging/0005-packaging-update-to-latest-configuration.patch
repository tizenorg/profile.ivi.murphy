From e6c7518e9e2afd25533eb0115950d5fae87a237d Mon Sep 17 00:00:00 2001
From: Krisztian Litkey <krisztian.litkey@intel.com>
Date: Tue, 15 Jan 2013 10:12:00 +0200
Subject: [PATCH 05/14] packaging: update to latest configuration.

---
 packaging.in/murphy.lua | 80 ++++++++++++++++++++++++++++---------------------
 1 file changed, 46 insertions(+), 34 deletions(-)

diff --git a/packaging.in/murphy.lua b/packaging.in/murphy.lua
index 7a06134..d01103d 100644
--- a/packaging.in/murphy.lua
+++ b/packaging.in/murphy.lua
@@ -1,19 +1,16 @@
 m = murphy.get()
 
--- try loading the dlog plugin
+-- load the dlog plugin
 m:try_load_plugin('dlog')
 
--- try loading console plugin
+-- load the console plugin
 m:try_load_plugin('console')
 
--- load the dbus plugin if it exists
+-- load the dbus plugin
 if m:plugin_exists('dbus') then
     m:load_plugin('dbus')
 end
 
--- try loading the signalling plugin
-m:try_load_plugin('signalling', { address = 'internal:signalling' })
-
 -- load the native resource plugin
 if m:plugin_exists('resource-native') then
     m:load_plugin('resource-native')
@@ -23,27 +20,29 @@ else
 end
 
 -- load the dbus resource plugin
-if m:plugin_exists('resource-dbus') then
-    m:try_load_plugin('resource-dbus', {
-        dbus_bus = "system",
-        dbus_service = "org.Murphy",
-        dbus_track = true,
-        default_zone = "driver",
-        default_class = "implicit"
-      })
-    m:info("dbus resource plugin loaded")
-else
-    m:info("No dbus resource plugin found...")
-end
-
-
--- load the domain control plugin if it exists
+m:try_load_plugin('resource-dbus', {
+    dbus_bus = "system",
+    dbus_service = "org.Murphy",
+    dbus_track = true,
+    default_zone = "driver",
+    default_class = "implicit"
+})
+
+-- load the domain control plugin
 if m:plugin_exists('domain-control') then
     m:load_plugin('domain-control')
 else
     m:info("No domain-control plugin found...")
 end
 
+-- load the AMB plugin
+if m:plugin_exists('amb') then
+    m:load_plugin('amb')
+else
+    m:info("No amb plugin found...")
+end
+
+-- load the ASM resource plugin
 if m:plugin_exists('resource-asm') then
     m:load_plugin('resource-asm', { zone = "driver" })
 else
@@ -51,13 +50,9 @@ else
 end
 
 -- define application classes
-application_class { name = "navigator", priority = 8 }
-application_class { name = "event"    , priority = 7 }
-application_class { name = "phone"    , priority = 6 }
-application_class { name = "camera"   , priority = 5 }
-application_class { name = "alert"    , priority = 4 }
-application_class { name = "game"     , priority = 3 }
-application_class { name = "radio"    , priority = 2 }
+application_class { name = "navigator", priority = 4 }
+application_class { name = "phone"    , priority = 3 }
+application_class { name = "game"     , priority = 2 }
 application_class { name = "player"   , priority = 1 }
 application_class { name = "implicit" , priority = 0 }
 
@@ -134,16 +129,25 @@ resource.class {
 }
 
 -- test for creating selections
+--[[
 mdb.select {
            name = "audio_owner",
            table = "audio_playback_owner",
            columns = {"application_class"},
-           condition = "zone_name = 'driver'",
+           condition = "zone_name = 'driver'"
+}
+--]]
+
+mdb.select {
+           name = "vehicle_speed",
+           table = "amb_vehicle_speed",
+           columns = {"value"},
+           condition = "key = 'VehicleSpeed'"
 }
 
 element.lua {
    name    = "speed2volume",
-   inputs  = { owner = mdb.select.audio_owner, param = 5 },
+   inputs  = { speed = mdb.select.vehicle_speed, param = 9 },
    outputs = {  mdb.table { name = "speedvol",
 			    index = {"zone", "device"},
 			    columns = {{"zone", mdb.string, 16},
@@ -152,14 +156,22 @@ element.lua {
                             create = true
 			   }
 	     },
+   oldvolume = 0.0,
    update  = function(self)
-                if (self.inputs.owner.single_value) then
-                   print("*** element "..self.name.." update "..
-                          self.inputs.owner.single_value)
+                speed = self.inputs.speed.single_value
+                if (speed) then
+                    volume = (speed - 144.0) / 7.0
                 else
-                   print("*** element "..self.name.." update <nil>")
+                    volume = 0.0
                 end
+                diff = volume - self.oldvolume
+                if (diff*diff > self.inputs.param) then
+                    print("*** element "..self.name.." update "..volume)
+                    self.oldvolume = volume
+		    mdb.table.speedvol:replace({zone = "driver", device = "speakers", value = volume})
+		end
 	     end
 }
 
+-- load the telephony plugin
 m:try_load_plugin('telephony')
-- 
1.8.1.4

